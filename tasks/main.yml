---
- name: Set virtualization packages
  tags: kvm
  set_fact:
    virtPackages:
      - bridge-utils 
      - hddtemp
      - libvirt-clients
      - libvirt-daemon-system
      - lm-sensors
      - python3-libvirt
      - python3-lxml
      - qemu
      - qemu-kvm
      - virtinst
      - vmdb2
      - xfsprogs

- name: Install virtualization software
  tags: kvm
  apt:
    name: "{{ virtPackages }}"

- name: Create virtual bridge networks
  tags: kvm, network, bridged
  virt_net:
    name: br0
    xml: '{{ lookup("template", "bridge.xml") }}'
    state: present
  when: networkMode == "bridged"

- name: Autostart virtual bridge networks
  tags: kvm, network, bridged
  virt_net:
    name: br0
    autostart: yes
  when: networkMode == "bridged"

- name: Activate virtual bridge networks
  tags: kvm, network, bridged
  virt_net:
    name: br0
    state: active
  when: networkMode == "bridged"

- name: Create virtual networks
  tags: kvm, network, ovs
  virt_net:
    name: "{{ item.bridge }}"
    xml: '{{ lookup("template", "ovsBrTemplate.xml") }}'
    state: present
  loop: "{{ openVSwitchConfig }}"
  when: networkMode == "openVSwitch"

- name: Autostart virtual networks
  tags: kvm, network, ovs
  virt_net:
    name: "{{ item.bridge }}"
    autostart: yes
  loop: "{{ openVSwitchConfig }}"
  when: networkMode == "openVSwitch"

- name: Activate virtual networks
  tags: kvm, network, ovs
  virt_net:
    name: "{{ item.bridge }}"
    state: active
  loop: "{{ openVSwitchConfig }}"
  when: networkMode == "openVSwitch"

- name: Define mainPool storage in libvirt
  tags: kvm, storage
  virt_pool:
    autostart: yes
    command: define
    name: mainPool
    xml: '{{ lookup("template", "mainPool.xml") }}'

- name: Get mainPool storage facts
  tags: kvm, storage
  virt_pool:
    command: facts

- name: Build mainPool storage
  tags: kvm, storage
  virt_pool:
    command: build
    name: mainPool
  when: ansible_libvirt_pools.mainPool.status != "running"

- name: Start mainPool storage
  tags: kvm, storage
  virt_pool:
    command: create
    name: mainPool
  when: ansible_libvirt_pools.mainPool.status != "running"

- name: Activate mainPool storage
  tags: kvm, storage
  virt_pool:
    state: active
    name: mainPool

